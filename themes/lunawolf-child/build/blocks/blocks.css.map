{"version":3,"file":"blocks.css","mappings":";;;AACA;EACE;EACA;EACA;EACA;EACA;ACAF;;ACJE;EACE;EACA;ADOJ;ACLI;EACE;ADON;ACJI;;EAEE;ADMN;ACHI;;;;;;EAME;ADKN;;ACEE;EACE;ADCJ;ACEE;EACE;ADAJ;ACKI;EACE;ADHN;;AEpCA;EACE;EACA;EACA;EACA;EACA,WHKM;EGJN;EACA;EACA;EACA;AFuCF;AErCE;EACE,gBHFI;EGGJ,cHDiB;ACwCrB;AEpCE;EACE,qBHNM;EGON,cHNiB;AC4CrB;AEpCI;EACE,mBHVI;EGWJ,WHZE;ACkDR;;AG1DE;EACE;AH6DJ;AG1DE;EACE,WJGI;ACyDR;AG1DI;EACE;AH4DN;;AGvDA;EACE;EACA;EACA;AH0DF;;AGrDE;EACE;AHwDJ;AInBQ;EDlCN;IAGI;EHsDJ;AACF;AIxBQ;EDlCN;IAOI;EHuDJ;AACF;;AKtFI;EACE;ALyFN;AKrFE;EACE;EACA;EACA;ALuFJ;AKrFI;EACE;ALuFN;AKpFI;EACE;EACA;EAAS;EACT;EAAa;ALwFnB;AKtFM;EACE;EAAa;EACb;KAAA;ALyFR;AKpFE;EACE;ALsFJ;;AMrHA;EACE;EACA;ANwHF;AI7DQ;EEzDN;IAGI;IACA;ENuHJ;AACF;AMpHE;EACE;ANsHJ;AMpHI;EACE;ANsHN;;AOtIA;EACE,mBRUQ;EQTR;EACA;APyIF;AI/EQ;EG7DR;IAMI;EP0IF;AACF;AOxIE;EACE;AP0IJ;AOvIE;EACE;APyIJ;AOpII;EACE;APsIN;;AQ1JA;EACE;AR6JF;AIjGQ;EI7DR;IAII;ER8JF;AACF;AQ5JE;EACE;AR8JJ;AQ3JE;EACE;AR6JJ;AI5GQ;EIlDN;IAII;ER8JJ;AACF;AQ3JE;EACE;EACA;EACA;EACA;EACA;UAAA;EACA;EACA;EACA;AR6JJ;AI3HQ;EI1CN;IAWI;ER8JJ;AACF;AQ3JE;EACE,cTvBiB;ESwBjB;AR6JJ;;ASjMA;EACE;AToMF;ASlME;EACE;EACA;EACA;AToMJ;AI7IQ;EK1DN;IAMI;IACA;IACA;ETqMJ;AACF;ASlME;EACE;EACA;EAAQ;EACR;EACA,gBVTI;EUUJ;ATqMJ;ASlME;EACE;EACA;EACA;EAAW;EACX;EACA,mBVjBM;EUkBN,WVnBI;ACwNR,C","sources":["webpack://elune/./src/sass/_vars/_main.scss","webpack://elune/./src/sass/blocks.scss","webpack://elune/./src/sass/_components/_acf/_blocks/_global.scss","webpack://elune/./src/sass/_components/_btn.scss","webpack://elune/./src/sass/_blocks/_global.scss","webpack://elune/./src/sass/_mixins/_breakpoints.scss","webpack://elune/./src/sass/_blocks/_hero.scss","webpack://elune/./src/sass/_blocks/_simpleCenteredText.scss","webpack://elune/./src/sass/_blocks/_ctaBanner.scss","webpack://elune/./src/sass/_blocks/_gradStats.scss","webpack://elune/./src/sass/_blocks/_overlapped_content.scss"],"sourcesContent":["// CSS Variables\n:root {\n  --bg-color: #fff;\n  --text-color: #001559;\n  --primary-color: #001559;\n  --gray: #f1f1f1;\n  --accent: #0175ff;\n}\n\n$black: #000;\n$white: #fff;\n$primary: #001559; //TODO\n$text-color-primary: #001559;\n$accent: #0175ff;\n\n\n// Typography\n$font: sans-serif;\n$heading-font: Montserrat, sans-serif;\n\n// Grid breakpoints\n$grid-breakpoints: (\n  _: 0,\n  xs: 480px,\n  s: 576px,\n  m: 768px,\n  l: 992px,\n  xl: 1280px\n) !default;\n\n@include _assert-ascending($grid-breakpoints, '$grid-breakpoints');\n@include _assert-starts-at-zero($grid-breakpoints);\n\n// Define the maximum width of `.wrapper` for different screen sizes.\n$wrapper-max-widths: (\n  l: 1488px\n) !default;\n\n@include _assert-ascending($wrapper-max-widths, '$wrapper-max-widths');\n\n// Grid columns\n// Set the number of columns and specify the width of the gutters.\n$grid-columns:                12 !default;\n$grid-gutter-width:           24px !default;\n\n// Options\n$enable-grid-classes:       true !default;\n$enable-print-styles:       false !default;\n\n// Printing\n$print-page-size:             a3 !default;\n$print-body-min-width:        map-get($grid-breakpoints, 'l') !default;\n\n$mobile-landscape-width: 667px;\n$mobile-landscape-height: 500px;\n\n$narrow-laptop-width: 992px;\n$narrow-laptop-height: 600px;",":root {\n  --bg-color: #fff;\n  --text-color: #001559;\n  --primary-color: #001559;\n  --gray: #f1f1f1;\n  --accent: #0175ff;\n}\n\n.acfe-flexible-placeholder.-preview {\n  background: var(--bg-color);\n  color: var(--text-color);\n}\n.acfe-flexible-placeholder.-preview section {\n  position: relative;\n}\n.acfe-flexible-placeholder.-preview,\n.acfe-flexible-placeholder.-preview * {\n  box-sizing: border-box;\n}\n.acfe-flexible-placeholder.-preview h1,\n.acfe-flexible-placeholder.-preview h2,\n.acfe-flexible-placeholder.-preview h3,\n.acfe-flexible-placeholder.-preview h4,\n.acfe-flexible-placeholder.-preview h5,\n.acfe-flexible-placeholder.-preview h6 {\n  color: inherit;\n}\n\n.acfe-fc-placeholder.acfe-fc-preview .acfe-fc-overlay {\n  z-index: 20 !important;\n}\n.acfe-fc-placeholder.acfe-fc-preview > .button {\n  z-index: 25;\n}\n.acfe-fc-placeholder.acfe-fc-preview:hover .acfe-fc-overlay {\n  background: rgba(0, 21, 89, 0.5);\n}\n\n.btn {\n  display: inline-block;\n  padding: 14px 32px;\n  border: solid 1px #fff;\n  font-size: 16px;\n  color: #fff;\n  border-radius: 40px;\n  cursor: pointer;\n  text-decoration: none;\n  transition: 0.2s;\n}\n.btn:hover {\n  background: #fff;\n  color: #001559;\n}\n.btn__black {\n  border-color: #001559;\n  color: #001559;\n}\n.btn__black:hover {\n  background: #001559;\n  color: #fff;\n}\n\n.-preview .m__title {\n  font-weight: 700;\n}\n.m__title__white {\n  color: #fff;\n}\n.-preview .m__title__white {\n  color: #fff !important;\n}\n\n.m_desc {\n  font-size: 16px;\n  line-height: 24px;\n  font-weight: 400;\n}\n\n.container__center {\n  margin-inline: auto;\n}\n@media (min-width: 768px) {\n  .container__short {\n    max-width: 80%;\n  }\n}\n@media (min-width: 992px) {\n  .container__short {\n    max-width: 70%;\n  }\n}\n\n.-preview .m__hero img {\n  max-width: 100%;\n}\n.m__hero__hero {\n  position: relative;\n  min-height: 100vh;\n  min-height: calc(var(--vh, 1vh) * 100);\n}\n.-preview .m__hero__hero {\n  min-height: 600px;\n}\n.m__hero__hero .img {\n  position: absolute;\n  left: 0;\n  top: 0;\n  width: 100%;\n  height: 100%;\n}\n.m__hero__hero .img img {\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n}\n.m__hero .wrapper {\n  position: relative;\n}\n\n.m__scText {\n  padding: 100px 0;\n  text-align: center;\n}\n@media (min-width: 992px) {\n  .m__scText__title {\n    font-size: 40px;\n    line-height: 55px;\n  }\n}\n.m__scText__text {\n  text-wrap: balance;\n}\n.m__scText__text:not(:first-child) {\n  margin-top: 30px;\n}\n\n.m__ctaBanner {\n  background: #001559;\n  padding: 55px 0 47px 0;\n  text-align: center;\n}\n@media (min-width: 768px) {\n  .m__ctaBanner {\n    padding: 75px 67px;\n  }\n}\n.m__ctaBanner__gradient {\n  background: linear-gradient(97.03deg, #29A7DD 0%, #001559 92.23%);\n}\n.m__ctaBanner__title {\n  font-weight: 400;\n}\n.m__ctaBanner__btnWrapper:not(:first-child) {\n  margin-top: 30px;\n}\n\n.m__gradStats {\n  padding: 100px 0 70px;\n}\n@media (min-width: 768px) {\n  .m__gradStats {\n    padding: 100px 0 50px;\n  }\n}\n.m__gradStats ._w {\n  justify-content: center;\n}\n.m__gradStats__block {\n  margin-bottom: 30px;\n}\n@media (min-width: 768px) {\n  .m__gradStats__block {\n    margin-bottom: 50px;\n  }\n}\n.m__gradStats__numb {\n  font-size: 80px;\n  line-height: 100px;\n  font-weight: 700;\n  background: linear-gradient(97.03deg, #29A7DD 0%, #001559 92.23%);\n  background-clip: text;\n  -webkit-text-fill-color: transparent;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n@media (min-width: 768px) {\n  .m__gradStats__numb {\n    font-size: 100px;\n  }\n}\n.m__gradStats__desc {\n  color: #001559;\n  text-wrap: balance;\n}\n\n.m__ovrContent {\n  position: relative;\n}\n.m__ovrContent__bgImg {\n  background: 50%/contain no-repeat;\n  padding-top: 57.65%;\n  height: 0;\n}\n@media (min-width: 768px) {\n  .m__ovrContent__bgImg {\n    padding-top: 40.65%;\n    max-width: 895px;\n    margin: 0 100px 0 auto;\n  }\n}\n.m__ovrContent__left {\n  position: absolute;\n  top: 0;\n  left: 24px;\n  max-width: 507px;\n  background: #fff;\n  padding: 40px 15px;\n}\n.m__ovrContent__right {\n  padding: 20px 15px;\n  position: absolute;\n  bottom: 0;\n  right: 24px;\n  max-width: 630px;\n  background: #001559;\n  color: #fff;\n}",".acfe-flexible-placeholder {\n\n  &.-preview {\n    background: var(--bg-color);\n    color: var(--text-color);\n\n    section {\n      position: relative;\n    }\n\n    &,\n    * {\n      box-sizing: border-box;\n    }\n\n    h1,\n    h2,\n    h3,\n    h4,\n    h5,\n    h6 {\n      color: inherit;\n    }\n  }\n}\n\n.acfe-fc-placeholder.acfe-fc-preview {\n\n  .acfe-fc-overlay {\n    z-index: 20 !important;\n  }\n\n  & > .button {\n    z-index: 25;\n  }\n\n  &:hover {\n\n    .acfe-fc-overlay {\n      background: rgba($primary, .5);\n    }\n  }\n}",".btn {\n  display: inline-block;\n  padding: 14px 32px;\n  border: solid 1px $white;\n  font-size: 16px;\n  color: $white;\n  border-radius: 40px;\n  cursor: pointer;\n  text-decoration: none;\n  transition: .2s;\n\n  &:hover {\n    background: $white;\n    color: $text-color-primary;\n  }\n\n  &__black {\n    border-color: $primary;\n    color: $text-color-primary;\n\n    &:hover {\n      background: $primary;\n      color: $white;\n    }\n  }\n}",".m__title {\n\n  .-preview & {\n    font-weight: 700;\n  }\n\n  &__white {\n    color: $white;\n\n    .-preview & {\n      color: $white !important;\n    }\n  }\n}\n\n.m_desc {\n  font-size: 16px;\n  line-height: 24px;\n  font-weight: 400;\n}\n\n.container {\n\n  &__center {\n    margin-inline: auto;\n  }\n\n  &__short {\n\n    @include media-up(m) {\n      max-width: 80%;\n    }\n\n    @include media-up(l) {\n      max-width: 70%;\n    }\n  }\n}","// Breakpoint viewport sizes and media queries.\n//\n// Breakpoints are defined as a map of (name: minimum width), order from small to large:\n//\n//    (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px)\n//\n// The map defined in the `$grid-breakpoints` global variable is used as the `$breakpoints` argument by default.\n\n// Name of the next breakpoint, or null for the last breakpoint.\n//\n//    >> breakpoint-next(sm)\n//    md\n//    >> breakpoint-next(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    md\n//    >> breakpoint-next(sm, $breakpoint-names: (xs sm md lg xl))\n//    md\n@function breakpoint-next($name, $breakpoints: $grid-breakpoints, $breakpoint-names: map-keys($breakpoints)) {\n    $n: index($breakpoint-names, $name);\n    @return if($n < length($breakpoint-names), nth($breakpoint-names, $n + 1), null);\n}\n\n// Minimum breakpoint width. Null for the smallest (first) breakpoint.\n//\n//    >> breakpoint-min(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    576px\n@function breakpoint-min($name, $breakpoints: $grid-breakpoints) {\n    $min: map-get($breakpoints, $name);\n    @return if($min != 0, $min, null);\n}\n\n// Maximum breakpoint width. Null for the largest (last) breakpoint.\n// The maximum value is calculated as the minimum of the next one less 0.02px\n// to work around the limitations of `min-` and `max-` prefixes and viewports with fractional widths.\n// See https://www.w3.org/TR/mediaqueries-4/#mq-min-max\n// Uses 0.02px rather than 0.01px to work around a current rounding bug in Safari.\n// See https://bugs.webkit.org/show_bug.cgi?id=178261\n//\n//    >> breakpoint-max(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    767.98px\n@function breakpoint-max($name, $breakpoints: $grid-breakpoints) {\n    $next: breakpoint-next($name, $breakpoints);\n    @return if($next, breakpoint-min($next, $breakpoints) - .02px, null);\n}\n\n// Returns a blank string if smallest breakpoint, otherwise returns the name with a dash infront.\n// Useful for making responsive utilities.\n//\n//    >> breakpoint-infix(xs, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    ''  (Returns a blank string)\n//    >> breakpoint-infix(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    '-sm'\n@function breakpoint-infix($name, $breakpoints: $grid-breakpoints) {\n    //@return if(breakpoint-min($name, $breakpoints) == null, '', '-#{$name}');\n    @return if(breakpoint-min($name, $breakpoints) == null, '', '#{$name}');\n}\n\n// Media of at least the minimum breakpoint width. No query for the smallest breakpoint.\n// Makes the @content apply to the given breakpoint and wider.\n@mixin media-up($name, $breakpoints: $grid-breakpoints) {\n    $min: breakpoint-min($name, $breakpoints);\n    @if $min {\n        @media (min-width: $min) {\n            @content;\n        }\n    } @else {\n        @content;\n    }\n}\n\n// Media of at most the maximum breakpoint width. No query for the largest breakpoint.\n// Makes the @content apply to the given breakpoint and narrower.\n@mixin media-down($name, $breakpoints: $grid-breakpoints) {\n    $min: breakpoint-min($name, $breakpoints);\n    $current: map-get($breakpoints, $name);\n    $current-max: $current - .02px;\n    @if $min {\n        @media (max-width: $current-max) {\n            @content;\n        }\n    } @else {\n        @content;\n    }\n}\n\n// Media that spans multiple breakpoint widths.\n// Makes the @content apply between the min and max breakpoints\n@mixin media-between($lower, $upper, $breakpoints: $grid-breakpoints) {\n    $min: breakpoint-min($lower, $breakpoints);\n    $max: breakpoint-max($upper, $breakpoints);\n    $current-upper: map-get($breakpoints, $upper);\n    $current-upper-max: $current-upper - .02px;\n\n    @if $min != null {\n        @media (min-width: $min) and (max-width: $current-upper-max) {\n            @content;\n        }\n    } @else if $min == null {\n        @include media-down($upper, $breakpoints) {\n            @content;\n        }\n    }\n}\n\n// Media between the breakpoint's minimum and maximum widths.\n// No minimum for the smallest breakpoint, and no maximum for the largest one.\n// Makes the @content apply only to the given breakpoint, not viewports any wider or narrower.\n@mixin media-only($name, $breakpoints: $grid-breakpoints) {\n    $min: breakpoint-min($name, $breakpoints);\n    $max: breakpoint-max($name, $breakpoints);\n\n    @if $min != null and $max != null {\n        @media (min-width: $min) and (max-width: $max) {\n            @content;\n        }\n    } @else if $max == null {\n        @include media-up($name, $breakpoints) {\n            @content;\n        }\n    } @else if $min == null {\n        @media (max-width: $max) {\n            @content;\n        }\n    }\n}\n\n@mixin media-landscape {\n\n    @media (min-width: #{$mobile-landscape-width}) and (max-height: #{$mobile-landscape-height}) and (orientation: landscape) {\n        @content;\n    }\n}\n\n@mixin media-laptop {\n\n    @media (min-width: #{$narrow-laptop-width}) and (max-height: #{$narrow-laptop-height}) {\n        @content;\n    }\n}",".m__hero {\n\n  img {\n\n    .-preview & {\n      max-width: 100%;\n    }\n  }\n\n  &__hero {\n    position: relative;\n    min-height: 100vh;\n    min-height: calc(var(--vh, 1vh) * 100);\n\n    .-preview & {\n      min-height: 600px;\n    }\n\n    .img {\n      position: absolute;\n      left: 0; top: 0;\n      width: 100%; height: 100%;\n\n      img {\n        width: 100%; height: 100%;\n        object-fit: cover;\n      }\n    }\n  }\n\n  .wrapper {\n    position: relative;\n  }\n}",".m__scText {\n  padding: 100px 0;\n  text-align: center;\n\n  &__title {\n\n    @include media-up(l) {\n      font-size: 40px;\n      line-height: 55px;\n    }\n  }\n\n  &__text {\n    text-wrap: balance;\n\n    &:not(:first-child) {\n      margin-top: 30px;\n    }\n  }\n}",".m__ctaBanner {\n  background: $primary;\n  padding: 55px 0 47px 0;\n  text-align: center;\n\n  @include media-up(m) {\n    padding: 75px 67px;\n  }\n\n  &__gradient {\n    background: linear-gradient(97.03deg, #29A7DD 0%, #001559 92.23%);\n  }\n\n  &__title {\n    font-weight: 400;\n  }\n\n  &__btnWrapper {\n\n    &:not(:first-child) {\n      margin-top: 30px;\n    }\n  }\n}",".m__gradStats {\n  padding: 100px 0 70px;\n\n  @include media-up(m) {\n    padding: 100px 0 50px;\n  }\n\n  ._w {\n    justify-content: center\n  }\n\n  &__block {\n    margin-bottom: 30px;\n\n    @include media-up(m) {\n      margin-bottom: 50px;\n    }\n  }\n\n  &__numb {\n    font-size: 80px;\n    line-height: 100px;\n    font-weight: 700;\n    background: linear-gradient(97.03deg, #29A7DD 0%, #001559 92.23%);\n    background-clip: text;\n    -webkit-text-fill-color: transparent;\n    overflow: hidden;\n    text-overflow: ellipsis;\n\n    @include media-up(m) {\n      font-size: 100px;\n    }\n  }\n\n  &__desc {\n    color: $text-color-primary;\n    text-wrap: balance;\n  }\n}",".m__ovrContent {\n  position: relative;\n\n  &__bgImg {\n    background: 50% / contain no-repeat;\n    padding-top: 57.65%;\n    height: 0;\n\n    @include media-up(m) {\n      padding-top: 40.65%;\n      max-width: 895px;\n      margin: 0 100px 0 auto;\n    }\n  }\n\n  &__left {\n    position: absolute;\n    top: 0; left: 24px;\n    max-width: 507px;\n    background: $white;\n    padding: 40px 15px;\n  }\n\n  &__right {\n    padding: 20px 15px;\n    position: absolute;\n    bottom: 0; right: 24px;\n    max-width: 630px;\n    background: $primary;\n    color: $white;\n  }\n}"],"names":[],"sourceRoot":""}